"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = require("@angular/core");
var http_1 = require("@angular/common/http");
var Constants = require("../../constants");
var UserService = /** @class */ (function () {
    function UserService(httpClient) {
        this.httpClient = httpClient;
    }
    UserService.prototype.login = function (user) {
        var url = Constants.SERVER_URL + "Login/";
        var body = this.buildLoginBody(user);
        var options = {
            responseType: "text",
        };
        return this.httpClient.post(url, body, options);
    };
    UserService.prototype.buildLoginBody = function (user) {
        var body = new FormData();
        body.append("appid", Constants.APPLICATION_ID);
        body.append("ctl00$Content$txtUserName", user.name);
        body.append("ctl00$Content$txtPassword", user.password);
        body.append("ctl00$Content$BtnLogin", Constants.BUTTON_LOGIN);
        body.append("__EVENTVALIDATION", Constants.__EVENTVALIDATION);
        body.append("__VIEWSTATE", Constants.__VIEWSTATE);
        // body.append("__VIEWSTATEGENERATOR", Constants.__VIEWSTATEGENERATOR);
        return body;
    };
    UserService = __decorate([
        core_1.Injectable(),
        __metadata("design:paramtypes", [http_1.HttpClient])
    ], UserService);
    return UserService;
}());
exports.UserService = UserService;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXNlci5zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsidXNlci5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsc0NBQTJDO0FBQzNDLDZDQUFrRDtBQUVsRCwyQ0FBNEM7QUFHNUM7SUFFSSxxQkFBcUIsVUFBc0I7UUFBdEIsZUFBVSxHQUFWLFVBQVUsQ0FBWTtJQUFJLENBQUM7SUFFaEQsMkJBQUssR0FBTCxVQUFPLElBQVU7UUFDYixJQUFNLEdBQUcsR0FBRyxTQUFTLENBQUMsVUFBVSxHQUFHLFFBQVEsQ0FBQztRQUM1QyxJQUFNLElBQUksR0FBRyxJQUFJLENBQUMsY0FBYyxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQ3ZDLElBQU0sT0FBTyxHQUFHO1lBQ1osWUFBWSxFQUFFLE1BQWdCO1NBQ2pDLENBQUM7UUFDRixNQUFNLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQ3ZCLEdBQUcsRUFDSCxJQUFJLEVBQ0osT0FBTyxDQUNWLENBQUM7SUFDTixDQUFDO0lBRU8sb0NBQWMsR0FBdEIsVUFBdUIsSUFBVTtRQUM3QixJQUFNLElBQUksR0FBRyxJQUFJLFFBQVEsRUFBRSxDQUFDO1FBQzVCLElBQUksQ0FBQyxNQUFNLENBQUMsT0FBTyxFQUFFLFNBQVMsQ0FBQyxjQUFjLENBQUMsQ0FBQztRQUMvQyxJQUFJLENBQUMsTUFBTSxDQUFDLDJCQUEyQixFQUFFLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUNwRCxJQUFJLENBQUMsTUFBTSxDQUFDLDJCQUEyQixFQUFFLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztRQUN4RCxJQUFJLENBQUMsTUFBTSxDQUFDLHdCQUF3QixFQUFFLFNBQVMsQ0FBQyxZQUFZLENBQUMsQ0FBQztRQUM5RCxJQUFJLENBQUMsTUFBTSxDQUFDLG1CQUFtQixFQUFFLFNBQVMsQ0FBQyxpQkFBaUIsQ0FBQyxDQUFDO1FBQzlELElBQUksQ0FBQyxNQUFNLENBQUMsYUFBYSxFQUFFLFNBQVMsQ0FBQyxXQUFXLENBQUMsQ0FBQztRQUNsRCx1RUFBdUU7UUFDdkUsTUFBTSxDQUFDLElBQUksQ0FBQztJQUNoQixDQUFDO0lBM0JRLFdBQVc7UUFEdkIsaUJBQVUsRUFBRTt5Q0FHd0IsaUJBQVU7T0FGbEMsV0FBVyxDQTRCdkI7SUFBRCxrQkFBQztDQUFBLEFBNUJELElBNEJDO0FBNUJZLGtDQUFXIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gXCJAYW5ndWxhci9jb3JlXCI7XHJcbmltcG9ydCB7IEh0dHBDbGllbnQgfSBmcm9tIFwiQGFuZ3VsYXIvY29tbW9uL2h0dHBcIjtcclxuaW1wb3J0IHsgVXNlciB9IGZyb20gXCIuL3VzZXJcIjtcclxuaW1wb3J0ICogYXMgQ29uc3RhbnRzIGZyb20gXCIuLi8uLi9jb25zdGFudHNcIlxyXG5cclxuQEluamVjdGFibGUoKVxyXG5leHBvcnQgY2xhc3MgVXNlclNlcnZpY2Uge1xyXG5cclxuICAgIGNvbnN0cnVjdG9yKCBwcml2YXRlIGh0dHBDbGllbnQ6IEh0dHBDbGllbnQgKSB7fVxyXG5cclxuICAgIGxvZ2luKCB1c2VyOiBVc2VyICkge1xyXG4gICAgICAgIGNvbnN0IHVybCA9IENvbnN0YW50cy5TRVJWRVJfVVJMICsgXCJMb2dpbi9cIjtcclxuICAgICAgICBjb25zdCBib2R5ID0gdGhpcy5idWlsZExvZ2luQm9keSh1c2VyKTtcclxuICAgICAgICBjb25zdCBvcHRpb25zID0ge1xyXG4gICAgICAgICAgICByZXNwb25zZVR5cGU6IFwidGV4dFwiIGFzIFwidGV4dFwiLFxyXG4gICAgICAgIH07XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuaHR0cENsaWVudC5wb3N0KFxyXG4gICAgICAgICAgICB1cmwsXHJcbiAgICAgICAgICAgIGJvZHksXHJcbiAgICAgICAgICAgIG9wdGlvbnNcclxuICAgICAgICApO1xyXG4gICAgfVxyXG5cclxuICAgIHByaXZhdGUgYnVpbGRMb2dpbkJvZHkodXNlcjogVXNlcikge1xyXG4gICAgICAgIGNvbnN0IGJvZHkgPSBuZXcgRm9ybURhdGEoKTtcclxuICAgICAgICBib2R5LmFwcGVuZChcImFwcGlkXCIsIENvbnN0YW50cy5BUFBMSUNBVElPTl9JRCk7XHJcbiAgICAgICAgYm9keS5hcHBlbmQoXCJjdGwwMCRDb250ZW50JHR4dFVzZXJOYW1lXCIsIHVzZXIubmFtZSk7XHJcbiAgICAgICAgYm9keS5hcHBlbmQoXCJjdGwwMCRDb250ZW50JHR4dFBhc3N3b3JkXCIsIHVzZXIucGFzc3dvcmQpO1xyXG4gICAgICAgIGJvZHkuYXBwZW5kKFwiY3RsMDAkQ29udGVudCRCdG5Mb2dpblwiLCBDb25zdGFudHMuQlVUVE9OX0xPR0lOKTtcclxuICAgICAgICBib2R5LmFwcGVuZChcIl9fRVZFTlRWQUxJREFUSU9OXCIsIENvbnN0YW50cy5fX0VWRU5UVkFMSURBVElPTik7XHJcbiAgICAgICAgYm9keS5hcHBlbmQoXCJfX1ZJRVdTVEFURVwiLCBDb25zdGFudHMuX19WSUVXU1RBVEUpO1xyXG4gICAgICAgIC8vIGJvZHkuYXBwZW5kKFwiX19WSUVXU1RBVEVHRU5FUkFUT1JcIiwgQ29uc3RhbnRzLl9fVklFV1NUQVRFR0VORVJBVE9SKTtcclxuICAgICAgICByZXR1cm4gYm9keTtcclxuICAgIH1cclxufSJdfQ==